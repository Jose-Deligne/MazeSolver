[{"/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/index.js":"1","/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/App.js":"2","/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Components/NavBar/Navbar.js":"3","/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Components/MazeComponents/Maze.js":"4","/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Components/MazeComponents/GridBox.js":"5","/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Components/MazeComponents/EditMenu.js":"6","/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Context/MenuSelectionContext.js":"7","/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Context/CellInfoContext.js":"8"},{"size":457,"mtime":1626051523041,"results":"9","hashOfConfig":"10"},{"size":457,"mtime":1625895731001,"results":"11","hashOfConfig":"10"},{"size":125,"mtime":1625790938644,"results":"12","hashOfConfig":"10"},{"size":2841,"mtime":1625930091072,"results":"13","hashOfConfig":"10"},{"size":3982,"mtime":1626053430374,"results":"14","hashOfConfig":"10"},{"size":3310,"mtime":1626052501116,"results":"15","hashOfConfig":"10"},{"size":3359,"mtime":1626052298610,"results":"16","hashOfConfig":"10"},{"size":1438,"mtime":1626052834507,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sw5if9",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/index.js",[],"/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/App.js",["37"],"import React,{useState} from 'react';\nimport classes from './App.module.css';\nimport Maze from './Components/MazeComponents/Maze';\nimport EditMenu from './Components/MazeComponents/EditMenu';\n\nfunction App() {\n  let dim = [25,25];\n  \n  return (\n    <>\n      <div className={classes.heading}>\n        Maze Solver\n      </div>\n      <EditMenu className={classes.['menu']}/>\n      <Maze className={classes.body} dim={dim}/>\n    </>\n  );\n}\n\nexport default App;\n",["38","39"],"/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Components/NavBar/Navbar.js",["40","41"],"/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Components/MazeComponents/Maze.js",["42","43","44"],"import React,{useState, useEffect} from 'react';\nimport {GetWallCreationStatus, GetDeleteWallsStatus, GetStartingPointActiveStatus} from '../../Context/MenuSelectionContext';\nimport GridBox from './GridBox';\nimport classes from './Maze.module.css';\n\nconst Maze = (props) => {\n    let rows = props.dim[0];\n    let columns = props.dim[1];\n    let heightPerBox = 100/rows;\n    let widthPerBox = 100/columns;\n\n    const [createWallPressed, setCreateWallPressed] = useState(false);\n    const [startingPoint, setStartingPoint] = useState();\n    const wallCreationStatus = GetWallCreationStatus();\n    const wallDeletionStatus = GetDeleteWallsStatus();\n    const startingButtonStatus = GetStartingPointActiveStatus(null);\n\n    let squareStyle = {\n        display: 'grid',\n        height: '100%',\n        gridTemplateColumns: `repeat(${columns},${widthPerBox}%)`,\n        gridTemplateRows: `repeat(${rows},${heightPerBox}%)`,\n        background: 'grey'\n    };\n\n\n    const handleMouseDown = (value) => {\n        if (wallCreationStatus || wallDeletionStatus){\n            setCreateWallPressed(true)\n        }\n    };\n\n    const handleMouseUp = (event, value) => {\n        if (wallCreationStatus || wallDeletionStatus){\n            setCreateWallPressed(false);\n        }\n    };\n\n    const changeStartingPoint = (position) => {\n        setStartingPoint(position);\n    };\n\n\n    const createBoxGrid = () => {\n        // Create 2d array for each box\n        const mazeMap = [];\n        for (let i = rows-1; i >= 0; i--){\n            for (let j = 0; j < columns; j++) {\n                mazeMap.push([i,j]);\n            }\n        }\n        //creates jsx to display boxes\n        /*\n        let displayGrid = mazeMap.map((position) => {\n            return(\n                <GridBox \n                 cord={position}\n                 bPressed={handleMouseDown} \n                 bReleased={handleMouseUp}\n                 wallBlock={createWallPressed}\n                />\n            );\n        });\n        */\n       let displayGrid = mazeMap.map((position) => {\n            return(\n                [\n                    position,\n                    <GridBox \n                    cord={position}\n                    bPressed={handleMouseDown} \n                    bReleased={handleMouseUp}\n                    wallBlock={createWallPressed}\n                    checkStarting={startingPoint}\n                    setStarting={changeStartingPoint}\n                    />\n                ]\n            );\n        });\n\n        return displayGrid;\n    }\n\n\n    let mazeMap = createBoxGrid();\n\n    let displayGrid = mazeMap.map((position) => {\n        return(position[1]);\n    });\n\n\n    return(\n        <div className={props.className}>\n            <div style={squareStyle}>\n                {displayGrid}\n            </div>\n        </div>\n    );\n};\n\nexport default Maze;","/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Components/MazeComponents/GridBox.js",["45","46","47"],"/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Components/MazeComponents/EditMenu.js",["48"],"/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Context/MenuSelectionContext.js",[],"/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Context/CellInfoContext.js",[],{"ruleId":"49","severity":1,"message":"50","line":1,"column":15,"nodeType":"51","messageId":"52","endLine":1,"endColumn":23},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"49","severity":1,"message":"57","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"58","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":15},{"ruleId":"49","severity":1,"message":"59","line":1,"column":25,"nodeType":"51","messageId":"52","endLine":1,"endColumn":34},{"ruleId":"49","severity":1,"message":"58","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":15},{"ruleId":"49","severity":1,"message":"60","line":16,"column":11,"nodeType":"51","messageId":"52","endLine":16,"endColumn":31},{"ruleId":"49","severity":1,"message":"61","line":39,"column":11,"nodeType":"51","messageId":"52","endLine":39,"endColumn":22},{"ruleId":"62","severity":1,"message":"63","line":113,"column":8,"nodeType":"64","endLine":113,"endColumn":30,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":128,"column":7,"nodeType":"64","endLine":128,"endColumn":25,"suggestions":"67"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":15,"nodeType":"51","messageId":"52","endLine":1,"endColumn":23},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"'React' is defined but never used.","'classes' is defined but never used.","'useEffect' is defined but never used.","'startingButtonStatus' is assigned a value but never used.","'getPosition' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isStarting' and 'props.cord'. Either include them or remove the dependency array.","ArrayExpression",["70"],"React Hook useEffect has missing dependencies: 'isGoal' and 'props.cord'. Either include them or remove the dependency array.",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [isStarting, props.cord, startingCellLocation]",{"range":"76","text":"77"},"Update the dependencies array to be: [goalCellLocation, isGoal, props.cord]",{"range":"78","text":"79"},[3234,3256],"[isStarting, props.cord, startingCellLocation]",[3606,3624],"[goalCellLocation, isGoal, props.cord]"]