{"ast":null,"code":"var _jsxFileName = \"/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Components/MazeComponents/Maze.js\";\nimport React from 'react';\nimport classes from './Maze.module.css';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Maze = props => {\n  let rows = props.dim[0];\n  let columns = props.dim[1];\n  let heightPerBox = 100 / rows;\n  let widthPerBox = 100 / columns;\n  let squareStyle = {\n    display: 'grid',\n    gridTemplateColumns: `${widthPerBox}% auto`,\n    gridTemplateRows: `${heightPerBox}% auto`,\n    background: 'grey'\n  };\n  let boxStyle = {\n    color: 'white',\n    background: 'black'\n  };\n  console.log(`Height: ${heightPerBox}\\nWidth ${widthPerBox}`);\n\n  const createBoxGrid = () => {\n    // Create 2d array for each box\n    const map = [];\n\n    for (let i = rows - 1; i >= 0; i--) {\n      for (let j = 0; j < columns; j++) {\n        map.push([i, j]);\n      }\n    } //creates jsx to display boxes\n\n\n    let displayGrid = map.forEach(position => {\n      let currentRow = position[0];\n      let currentColumn = position[1];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: boxStyle,\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    });\n    console.log('Complete');\n    return displayGrid;\n  };\n\n  const temp = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: boxStyle,\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  };\n\n  createBoxGrid();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: squareStyle,\n      children: temp()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Maze;\nexport default Maze;\n\nvar _c;\n\n$RefreshReg$(_c, \"Maze\");","map":{"version":3,"sources":["/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Components/MazeComponents/Maze.js"],"names":["React","classes","styled","Maze","props","rows","dim","columns","heightPerBox","widthPerBox","squareStyle","display","gridTemplateColumns","gridTemplateRows","background","boxStyle","color","console","log","createBoxGrid","map","i","j","push","displayGrid","forEach","position","currentRow","currentColumn","temp","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,MAAIC,IAAI,GAAGD,KAAK,CAACE,GAAN,CAAU,CAAV,CAAX;AACA,MAAIC,OAAO,GAAGH,KAAK,CAACE,GAAN,CAAU,CAAV,CAAd;AACA,MAAIE,YAAY,GAAG,MAAIH,IAAvB;AACA,MAAII,WAAW,GAAG,MAAIF,OAAtB;AAEA,MAAIG,WAAW,GAAG;AACdC,IAAAA,OAAO,EAAE,MADK;AAEdC,IAAAA,mBAAmB,EAAG,GAAEH,WAAY,QAFtB;AAGdI,IAAAA,gBAAgB,EAAG,GAAEL,YAAa,QAHpB;AAIdM,IAAAA,UAAU,EAAE;AAJE,GAAlB;AAOA,MAAIC,QAAQ,GAAG;AACXC,IAAAA,KAAK,EAAE,OADI;AAEXF,IAAAA,UAAU,EAAE;AAFD,GAAf;AAKAG,EAAAA,OAAO,CAACC,GAAR,CAAa,WAAUV,YAAa,WAAUC,WAAY,EAA1D;;AAEA,QAAMU,aAAa,GAAG,MAAM;AACxB;AACA,UAAMC,GAAG,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAGhB,IAAI,GAAC,CAAlB,EAAqBgB,CAAC,IAAI,CAA1B,EAA6BA,CAAC,EAA9B,EAAiC;AAC7B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,OAApB,EAA6Be,CAAC,EAA9B,EAAkC;AAC9BF,QAAAA,GAAG,CAACG,IAAJ,CAAS,CAACF,CAAD,EAAGC,CAAH,CAAT;AACH;AACJ,KAPuB,CAQxB;;;AACA,QAAIE,WAAW,GAAGJ,GAAG,CAACK,OAAJ,CAAaC,QAAD,IAAc;AACxC,UAAIC,UAAU,GAAGD,QAAQ,CAAC,CAAD,CAAzB;AACA,UAAIE,aAAa,GAAGF,QAAQ,CAAC,CAAD,CAA5B;AACA,0BACI;AAAK,QAAA,SAAS,EAAEX,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KARiB,CAAlB;AASAE,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAOM,WAAP;AACH,GApBD;;AAsBA,QAAMK,IAAI,GAAG,MAAM;AACf,wBACI;AAAK,MAAA,KAAK,EAAEd,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND;;AAQAI,EAAAA,aAAa;AAEb,sBACI;AAAK,IAAA,SAAS,EAAEf,KAAK,CAAC0B,SAAtB;AAAA,2BACI;AAAK,MAAA,KAAK,EAAEpB,WAAZ;AAAA,gBACKmB,IAAI;AADT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA3DD;;KAAM1B,I;AA6DN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport classes from './Maze.module.css';\nimport styled from 'styled-components';\n\nconst Maze = (props) => {\n    let rows = props.dim[0];\n    let columns = props.dim[1];\n    let heightPerBox = 100/rows;\n    let widthPerBox = 100/columns;\n\n    let squareStyle = {\n        display: 'grid',\n        gridTemplateColumns: `${widthPerBox}% auto`,\n        gridTemplateRows: `${heightPerBox}% auto`,\n        background: 'grey'\n    };\n\n    let boxStyle = {\n        color: 'white',\n        background: 'black'\n    }\n\n    console.log(`Height: ${heightPerBox}\\nWidth ${widthPerBox}`)\n\n    const createBoxGrid = () => {\n        // Create 2d array for each box\n        const map = [];\n        for (let i = rows-1; i >= 0; i--){\n            for (let j = 0; j < columns; j++) {\n                map.push([i,j]);\n            }\n        }\n        //creates jsx to display boxes\n        let displayGrid = map.forEach((position) => {\n            let currentRow = position[0];\n            let currentColumn = position[1];\n            return(\n                <div className={boxStyle}>\n                    hi\n                </div>\n            );\n        });\n        console.log('Complete')\n        return displayGrid;\n    }\n\n    const temp = () => {\n        return(\n            <div style={boxStyle}>\n                hi\n            </div>\n        );\n    };\n\n    createBoxGrid();\n\n    return(\n        <div className={props.className}>\n            <div style={squareStyle}>\n                {temp()}\n            </div>\n        </div>\n    );\n};\n\nexport default Maze;"]},"metadata":{},"sourceType":"module"}