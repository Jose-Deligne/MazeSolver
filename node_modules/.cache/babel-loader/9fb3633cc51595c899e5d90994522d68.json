{"ast":null,"code":"var _jsxFileName = \"/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Components/MazeComponents/GridBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './GridBox.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GridBox = props => {\n  _s();\n\n  const [backgroundColor, setBackgroundColor] = useState({\n    background: 'white'\n  });\n  let row = props.cord[0];\n  let column = props.cord[1];\n  /*\n  let boxStyle = {\n      color: 'black',\n      background: 'white',\n      border: '1px solid black',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n      \n  }\n  */\n\n  const getPosition = () => {\n    console.log(`row: ${row}. Column ${column}`);\n  };\n\n  const hoverOverCellHandler = event => {\n    if (props.wallBlock) {\n      setBackgroundColor({\n        background: 'black'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.boxStyle,\n    style: backgroundColor,\n    onClick: getPosition,\n    onMouseDown: event => {\n      props.bPressed(event, props.cord);\n    },\n    onMouseUp: event => {\n      props.bReleased(event, props.cord);\n    },\n    onMouseEnter: hoverOverCellHandler,\n    children: `(${row},${column})`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GridBox, \"C8Cx63s3hXBavR7/34eLGDxwtDk=\");\n\n_c = GridBox;\nexport default GridBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridBox\");","map":{"version":3,"sources":["/Users/josedeligne/Code/personalProjects/smallProjects/MazeSolver/src/Components/MazeComponents/GridBox.js"],"names":["React","useState","classes","GridBox","props","backgroundColor","setBackgroundColor","background","row","cord","column","getPosition","console","log","hoverOverCellHandler","event","wallBlock","boxStyle","bPressed","bReleased"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC;AACnDM,IAAAA,UAAU,EAAE;AADuC,GAAD,CAAtD;AAIA,MAAIC,GAAG,GAAGJ,KAAK,CAACK,IAAN,CAAW,CAAX,CAAV;AACA,MAAIC,MAAM,GAAGN,KAAK,CAACK,IAAN,CAAW,CAAX,CAAb;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,QAAME,WAAW,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAa,QAAOL,GAAI,YAAWE,MAAO,EAA1C;AACH,GAFD;;AAIA,QAAMI,oBAAoB,GAAIC,KAAD,IAAW;AACpC,QAAIX,KAAK,CAACY,SAAV,EAAqB;AACjBV,MAAAA,kBAAkB,CAAC;AACfC,QAAAA,UAAU,EAAE;AADG,OAAD,CAAlB;AAGH;AACJ,GAND;;AAQA,sBACI;AACC,IAAA,SAAS,EAAEL,OAAO,CAACe,QADpB;AAEC,IAAA,KAAK,EAAEZ,eAFR;AAGC,IAAA,OAAO,EAAEM,WAHV;AAIC,IAAA,WAAW,EAAGI,KAAD,IAAW;AACpBX,MAAAA,KAAK,CAACc,QAAN,CAAeH,KAAf,EAAsBX,KAAK,CAACK,IAA5B;AACH,KANF;AAOC,IAAA,SAAS,EAAGM,KAAD,IAAW;AAClBX,MAAAA,KAAK,CAACe,SAAN,CAAgBJ,KAAhB,EAAuBX,KAAK,CAACK,IAA7B;AACH,KATF;AAUC,IAAA,YAAY,EAAEK,oBAVf;AAAA,cAYM,IAAGN,GAAI,IAAGE,MAAO;AAZvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA/CD;;GAAMP,O;;KAAAA,O;AAiDN,eAAeA,OAAf","sourcesContent":["import React,{useState} from 'react';\nimport classes from './GridBox.module.css';\n\nconst GridBox = (props) => {\n    const [backgroundColor, setBackgroundColor] = useState({\n        background: 'white'\n    });\n\n    let row = props.cord[0];\n    let column = props.cord[1];\n    /*\n    let boxStyle = {\n        color: 'black',\n        background: 'white',\n        border: '1px solid black',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n        \n    }\n    */\n\n    const getPosition = () => {\n        console.log(`row: ${row}. Column ${column}`)\n    }\n\n    const hoverOverCellHandler = (event) => {\n        if (props.wallBlock) {\n            setBackgroundColor({\n                background: 'black'\n            })\n        }\n    };\n\n    return(\n        <div \n         className={classes.boxStyle}\n         style={backgroundColor} \n         onClick={getPosition} \n         onMouseDown={(event) => {\n             props.bPressed(event, props.cord)\n         }}\n         onMouseUp={(event) => {\n             props.bReleased(event, props.cord)\n         }}\n         onMouseEnter={hoverOverCellHandler}\n         >\n            {`(${row},${column})`}\n        </div>\n    );\n};\n\nexport default GridBox;"]},"metadata":{},"sourceType":"module"}